#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

/ {

    macros {
        bt_clr_0: bt_clr_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
        };

        bt_clr_1: bt_clr_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
        };

        bt_clr_2: bt_clr_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
        };

        bt_clr_3: bt_clr_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
        };

        bt_clr_4: bt_clr_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
        };

        jp: to_japanese {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LSHIFT) &kp GRAVE>;
        };
    };

    behaviors {
        bt0: bt0 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt BT_SEL 0>, <&bt_clr_0>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt1: bt1 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt BT_SEL 1>, <&bt_clr_1>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt2: bt2 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt BT_SEL 2>, <&bt_clr_2>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt3: bt3 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt BT_SEL 3>, <&bt_clr_3>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt4: bt4 {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&bt BT_SEL 4>, <&bt_clr_4>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        taskman: task_manager {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp ESC>, <&kp LS(LC(ESC))>;
            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };

        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };

    keymap {
        #define QWERTY          0
        #define ENGRAM          1
        #define ENGRAM_RAISED   2
        #define SPEC_NUM        3
        #define SPEC1           4

        compatible = "zmk,keymap";

        qwerty {
            bindings = <
                &taskman    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                  &kp N6  &kp N7  &kp N8      &kp N9  &kp N0      &kp DEL
                &kp TAB     &kp Q   &kp W   &kp E   &kp R   &kp T                                   &kp Y   &kp U   &kp I       &kp O   &kp P       &kp MINUS
                &kp LGUI    &kp A   &kp S   &kp D   &kp F   &kp G                                   &kp H   &kp J   &kp K       &kp L   &kp SEMI    &kp APOS
                &kp LCTRL   &kp Z   &kp X   &kp C   &kp V   &kp B                                   &kp N   &kp M   &kp COMMA   &kp DOT &kp FSLH    MO_TOG(SPEC1)
                    &jp  MO_TOG(SPEC_NUM)  &kp LALT  &mt LSHIFT SPACE  &kp BSPC       &kp RET  &mt LSHIFT BSLH  &none  &kp LBKT  &kp RBKT
            >;
        };

        engram {
            bindings = <
                &taskman    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                              &kp N6      &kp N7  &kp N8  &kp N9  &kp N0  &kp DEL
                &kp TAB     &kp B   &kp Y   &kp O   &kp U   &kp SQT                                             &kp DQT     &kp L   &kp D   &kp W   &kp V   &kp Z
                &kp LGUI    &kp C   &kp I   &kp E   &kp A   &kp COMMA                                           &kp DOT     &kp H   &kp T   &kp S   &kp N   &kp Q
                &kp LCTRL   &kp G   &kp X   &kp J   &kp K   &kp MINUS                                           &kp QMARK   &kp R   &kp M   &kp F   &kp P   MO_TOG(SPEC1)
                    &jp  MO_TOG(SPEC_NUM)  &kp LALT  &lt ENGRAM_RAISED SPACE &kp BSPC         &kp RET  &lt ENGRAM_RAISED AT  &kp KP_SLASH  &kp LBKT  &kp RBKT
            >;
        };

        engram_raised {
            bindings = <
                &trans  &kp PIPE    &kp EQUAL   &kp TILDE    &kp PLUS   &kp LT                              &kp GT      &kp CARET    &kp AMPS   &kp PERCENT &kp ASTERISK    &trans
                &trans  &kp LS(B)   &kp LS(Y)   &kp LS(O)    &kp LS(U)  &kp LPAR                            &kp RPAR    &kp LS(L)    &kp LS(D)  &kp LS(W)   &kp LS(V)       &kp LS(Z)
                &trans   &kp LS(C)   &kp LS(I)   &kp LS(E)    &kp LS(A)  &kp SEMI                            &kp COLON   &kp LS(H)    &kp LS(T)  &kp LS(S)   &kp LS(N)       &kp LS(Q)
                &trans  &kp LS(G)   &kp LS(X)   &kp LS(J)    &kp LS(K)  &kp UNDER                           &kp EXCL    &kp LS(R)    &kp LS(M)  &kp LS(F)   &kp LS(P)       &none
                                                        &none  &none  &trans  &trans  &trans        &trans  &trans  &kp BACKSLASH  &kp LBRC  &kp RBRC
            >;
        };

        spec_num {
            bindings = <
                &trans  &none   &none   &none   &none   &none                   &none   &none       &kp KP_SLASH    &kp KP_ASTERISK &kp KP_MINUS    &none
                &none   &none   &none   &none   &none   &none                   &none   &kp KP_N7   &kp KP_N8       &kp KP_N9       &kp KP_PLUS     &none
                &none   &none   &none   &none   &none   &none                   &none   &kp KP_N4   &kp KP_N5       &kp KP_N6       &kp KP_PLUS     &none
                &none   &none   &none   &none   &none   &none                   &none   &kp KP_N1   &kp KP_N2       &kp KP_N3       &kp KP_EQUAL    &trans
                                &trans  &trans  &trans  &trans  &none       &none  &trans  &kp KP_N0  &kp KP_N0  &kp KP_DOT
            >;
        };

        special1 {
            bindings = <
                &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                              &kp F6  &kp F7          &kp F8  &kp F9          &kp F10         &kp F11
                &bt0    &bt2    &none   &none   &none   &soft_off                           &none   &out OUT_USB    &none   &out OUT_TOG    &none           &kp F12
                &bt1    &bt3    &none   &none   &none   &none                               &none   &none           &none   &none           &none           &none
                &trans  &none   &none   &none   &none   &out OUT_BLE                        &none   &kp LEFT        &kp UP  &kp RIGHT       &studio_unlock  &trans
                                    &trans  &trans  &trans  &trans  &to QWERTY      &to ENGRAM  &trans  &kp HOME  &kp DOWN  &kp END
            >;
        };
    };
};
